File contains tests for the matrix_divided function from the 2-matrix_divided module

Import the function from the module.
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Proceed to test the function.
	>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]
	>>> matrix_divided(matrix, -3)
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0], [-2.33, -2.67, -3.0]]
	>>> matrix_divided(matrix, 2.5)
	[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4], [2.8, 3.2, 3.6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: ...

	>>> matrix_divided(matrix, "None")
	Traceback (most recent call last):
	TypeError: ...

	>>> matrix_divided(matrix)
	Traceback (most recent call last):
        TypeError: ...

	>>> matrix_divided(matrix, "street")
	Traceback (most recent call last):
        TypeError: ...
	>>> matrix_divided(matrix, float("NaN"))
	[[nan, nan, nan], [nan, nan, nan], [nan, nan, nan]]

	>>> matrix = [[1, 2, 3], [4, "set", 5]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: ...

	>>> matrix = [3, 5, 7]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: ...

	>>> matrix = [[3, 6, 9], [4, 5]]
	>>> matrix_divided(matrix, 5)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix = [[2]]
	>>> matrix_divided(matrix, 3)
	[[0.67]]
	>>> matrix_divided(matrix, float("inf"))
	>>> [[0.0]]

	>>> matrix = [[4, 6, float("inf")], [12, 3.5, 6]]
	>>> matrix_divided(matrix, 3)
	[[1.33, 2.0, inf], [4.0, 1.17, 2.0]]
	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: ...

	>>> matrix = [[5, "7", 9], [4, 6, 8]]
	>>> matrix_divided(matrix, 4)
	>>> Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
